{{- $image := .Values.image | default dict -}}
{{- $livenessProbe := .Values.livenessProbe | default dict -}}
{{- $readinessProbe := .Values.readinessProbe | default dict -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notification-service.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector: 
    matchLabels: 
      app: {{ include "notification-service.name" . }}
  strategy: 
  {{ toYaml .Values.updateStrategy | indent 4 }}
  template:
    metadata: 
      labels: 
        app: {{ include "notification-service.name" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ $image.repository }}:{{ $image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ $image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        envFrom:
          - configMapRef:
              name: {{ include "notification-service.configmap" . }}
          - secretRef:
              name: {{ include "notification-service.secretName" . }}
        {{- if $livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: {{ $livenessProbe.path }}
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ $livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $livenessProbe.periodSeconds }}
          failureThreshold: {{ $livenessProbe.failureThreshold }}
        {{- end }}
        {{- if $readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: {{ $readinessProbe.path }}
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ $readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $readinessProbe.periodSeconds }}
        {{- end }}
